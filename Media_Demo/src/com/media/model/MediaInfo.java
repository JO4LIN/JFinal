package com.media.model;

import java.util.List;

import com.jfinal.plugin.activerecord.Page;
import com.media.model.base.BaseMediaInfo;
import com.sun.org.apache.xpath.internal.operations.And;

/**
 * Generated by JFinal.
 * MediaInfo model.
 */

@SuppressWarnings("serial")
public class MediaInfo extends BaseMediaInfo<MediaInfo> {
	
	public static final MediaInfo me = new MediaInfo();

//	查询，分页，全部自媒体
	public Page<MediaInfo> mediaIdAsc(int pageNumber, int pageSize) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info order by mediaId asc");
	}
	
//	查询，分页，自媒体，传入的schoolId为限定条件
	public Page<MediaInfo> mediaSchoolList(int pageNumber, int pageSize, String schoolId) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where schoolId='"+schoolId+"' order by mediaId asc");
	}	

//	查询，分页，自媒体，传入的mediaName为限定条件
	public Page<MediaInfo> mediaNameSchoolList(int pageNumber, int pageSize, String schoolId, String mediaName) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where mediaName='"+mediaName+"' and schoolId="+schoolId+" order by mediaId asc");
	}
	
//	查询，分页，自媒体，传入的mediaName和medTypesFir为限定条件
	public Page<MediaInfo> mediaNameClassList(int pageNumber, int pageSize, String medTypesFir, String mediaName) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where mediaName='"+mediaName+"' and medTypesFir="+medTypesFir+" order by mediaId asc");
	}	

//	查询，分页，自媒体，传入的schoolId，以fansNum为排序
	public Page<MediaInfo> fansNumSchoolList(int pageNumber, int pageSize, String schoolId, String order) {
		//select mediaId,mediaName,wechatHead,isVerification,fansNum,readNum,hardSimplePrice
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where schoolId='"+schoolId+"' order by fansNum "+order);
	}
	
//	查询，分页，自媒体，传入的medTypesFir，以fansNum为排序
	public Page<MediaInfo> fansNumClassList(int pageNumber, int pageSize, String medTypesFir, String order) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where medTypesFir='"+medTypesFir+"' order by fansNum "+order);
	}	
	
//	查询，分页，自媒体，传入的schoolId，以softMoreOtherPrice为排序
	public Page<MediaInfo> readNumSchoolList(int pageNumber, int pageSize, String schoolId, String order) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where schoolId='"+schoolId+"' order by readNum "+order);
	}
	
//	查询，分页，自媒体，传入的medTypesFir，以softMoreOtherPrice为排序
	public Page<MediaInfo> readNumClassList(int pageNumber, int pageSize, String medTypesFir, String order) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where medTypesFir='"+medTypesFir+"' order by readNum "+order);
	}	
	
//	查询，分页，自媒体，传入的schoolId，以softMoreOtherPrice为排序
	public Page<MediaInfo> priceSchoolList(int pageNumber, int pageSize, String schoolId, String order) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where schoolId='"+schoolId+"' order by hardSimplePrice "+order);
	}

//	查询，分页，自媒体，传入的medTypesFir，以softMoreOtherPrice为排序
	public Page<MediaInfo> priceClassList(int pageNumber, int pageSize, String medTypesFir, String order) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where medTypesFir='"+medTypesFir+"' order by hardSimplePrice "+order);
	}
	
//	检索，分页，全部自媒体
	public Page<MediaInfo> searchAllMedia(int pageNumber, int pageSize, String likeStr) {
		return paginate(pageNumber, pageSize, "select *", "from tb_media_info where mediaName like '"+likeStr+"' order by fansNum desc");
	}
	
//	检索自媒体，分页，根据学校
	public Page<MediaInfo> searchSchoolMedia(int pageNumber, int pageSize, String likeStr, int schoolId, String rankBy,
					int price, int fansNum, int readNum, int isVerification1, int isVerification2,String priceType) {
		return paginate(pageNumber, pageSize, "select mediaId,mediaName,wechatHead,isVerification,fansNum,readNum,"+priceType+" as hardSimplePrice", "from tb_media_info where schoolId = '"+schoolId+"' and mediaName like '"+likeStr+"'"
				+ " and "+priceType+" < '"+price+"' and "+priceType+" != -1 and fansNum > '"+fansNum+"'"
						+ " and readNum > '"+readNum+"' and (isVerification = '"+isVerification1+"' or isVerification = '"+isVerification2+"') order by "+ rankBy +" desc");
	}
	
//	检索自媒体，分页，根据分类
	public Page<MediaInfo> searchSortMedia(int pageNumber, int pageSize, String likeStr, int sortId, String rankBy,
			int price, int fansNum, int readNum, int isVerification1, int isVerification2,String priceType) {
		return paginate(pageNumber, pageSize, "select mediaId,mediaName,wechatHead,isVerification,fansNum,readNum,"+priceType+" as hardSimplePrice", "from tb_media_info where medTypesFir = '"+sortId+"' and mediaName like '"+likeStr+"'"
				+ " and "+priceType+" < '"+price+"' and "+priceType+" != -1 and fansNum > '"+fansNum+"'"
				+ " and readNum > '"+readNum+"' and (isVerification = '"+isVerification1+"' or isVerification = '"+isVerification2+"') order by "+ rankBy +" desc");
	}
	
	//根据行业返回自媒体（默认粉丝数排序）
	public Page<MediaInfo> medType(int pageNumber, int pageSize, int sortId){
		return paginate(pageNumber, pageSize, "select *", 
				"from tb_media_info where medTypesFir = '"+sortId+"' order by fansNum desc");
	}
	
	//根据学校返回自媒体（默认粉丝数排序）
	public Page<MediaInfo> medSchool(int pageNumber, int pageSize, int schoolId){
		return paginate(pageNumber, pageSize, "select *", 
				"from tb_media_info where schoolId = '"+schoolId+"' order by fansNum desc");
	}
	
	//根据筛选返回自媒体
	public Page<MediaInfo> screenMedia(int pageNumber, int pageSize, int price, int fansNum, int readNum, int isVerification1, int isVerification2, int screenId, String orderType,String priceType,String screenType){
		return paginate(pageNumber, pageSize, "select mediaId,mediaName,wechatHead,isVerification,fansNum,readNum,"+priceType+" as hardSimplePrice", 
				"from tb_media_info where "+screenType+" = '"+screenId+"' and "+priceType+" < '"+price+"' and "+priceType+" != -1 and fansNum > '"+fansNum+"'"
						+ " and readNum > '"+readNum+"' and (isVerification = '"+isVerification1+"' or isVerification = '"+isVerification2+"') order by "+orderType+" desc");
	}
	
	public Page<MediaInfo> screenCityMedia(int pageNumber, int pageSize, int price, int fansNum, int readNum, int isVerification1, int isVerification2,String orderType,String priceType,int cityId,String likeStr){
		return paginate(pageNumber, pageSize, "select mediaId,mediaName,wechatHead,isVerification,fansNum,readNum,"+priceType+" as hardSimplePrice", 
				"from tb_media_info where cityId='"+cityId+"' and "+priceType+" < '"+price+"' and "+priceType+" != -1 and fansNum > '"+fansNum+"'"
						+ " and readNum > '"+readNum+"' and mediaName like '"+likeStr+"' and (isVerification = '"+isVerification1+"' or isVerification = '"+isVerification2+"') order by "+orderType+" desc");
	}
	
	//获取mediaId
	public List<MediaInfo> findMediaId(int userId) {
		return find("select mediaId,mediaName,wechatNum,wechatHead,isVerification,fansNum,readNum,collectNum from tb_media_info where userId = '"+userId+"' order by mediaId asc");
	}
	
	//检验公众号是否重复
	public List<MediaInfo> checkWechatNum(String wechatNum) {
		return find("select wechatNum from tb_media_info where wechatNum = '"+wechatNum+"'");
	}
	
}
